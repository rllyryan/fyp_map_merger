;; Auto-generated. Do not edit!


(when (boundp 'locomotor_msgs::NavigateToPoseGoal)
  (if (not (find-package "LOCOMOTOR_MSGS"))
    (make-package "LOCOMOTOR_MSGS"))
  (shadow 'NavigateToPoseGoal (find-package "LOCOMOTOR_MSGS")))
(unless (find-package "LOCOMOTOR_MSGS::NAVIGATETOPOSEGOAL")
  (make-package "LOCOMOTOR_MSGS::NAVIGATETOPOSEGOAL"))

(in-package "ROS")
;;//! \htmlinclude NavigateToPoseGoal.msg.html
(if (not (find-package "NAV_2D_MSGS"))
  (ros::roseus-add-msgs "nav_2d_msgs"))


(defclass locomotor_msgs::NavigateToPoseGoal
  :super ros::object
  :slots (_goal ))

(defmethod locomotor_msgs::NavigateToPoseGoal
  (:init
   (&key
    ((:goal __goal) (instance nav_2d_msgs::Pose2DStamped :init))
    )
   (send-super :init)
   (setq _goal __goal)
   self)
  (:goal
   (&rest __goal)
   (if (keywordp (car __goal))
       (send* _goal __goal)
     (progn
       (if __goal (setq _goal (car __goal)))
       _goal)))
  (:serialization-length
   ()
   (+
    ;; nav_2d_msgs/Pose2DStamped _goal
    (send _goal :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; nav_2d_msgs/Pose2DStamped _goal
       (send _goal :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; nav_2d_msgs/Pose2DStamped _goal
     (send _goal :deserialize buf ptr-) (incf ptr- (send _goal :serialization-length))
   ;;
   self)
  )

(setf (get locomotor_msgs::NavigateToPoseGoal :md5sum-) "9b2d518adfd9df22ae3384278db3a616")
(setf (get locomotor_msgs::NavigateToPoseGoal :datatype-) "locomotor_msgs/NavigateToPoseGoal")
(setf (get locomotor_msgs::NavigateToPoseGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
nav_2d_msgs/Pose2DStamped goal

================================================================================
MSG: nav_2d_msgs/Pose2DStamped
Header header
geometry_msgs/Pose2D pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose2D
# Deprecated
# Please use the full 3D pose.

# In general our recommendation is to use a full 3D representation of everything and for 2D specific applications make the appropriate projections into the plane for their calculations but optimally will preserve the 3D information during processing.

# If we have parallel copies of 2D datatypes every UI and other pipeline will end up needing to have dual interfaces to plot everything. And you will end up with not being able to use 3D tools for 2D use cases even if they're completely valid, as you'd have to reimplement it with different inputs and outputs. It's not particularly hard to plot the 2D pose or compute the yaw error for the Pose message and there are already tools and libraries that can do this for you.


# This expresses a position and orientation on a 2D manifold.

float64 x
float64 y
float64 theta

")



(provide :locomotor_msgs/NavigateToPoseGoal "9b2d518adfd9df22ae3384278db3a616")



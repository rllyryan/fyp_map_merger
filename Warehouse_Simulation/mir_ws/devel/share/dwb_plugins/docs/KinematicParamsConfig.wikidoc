# Autogenerated param section. Do not hand edit.
param {
group.0 {
name=Dynamically Reconfigurable Parameters
desc=See the [[dynamic_reconfigure]] package for details on dynamically reconfigurable parameters.
0.name= ~min_vel_x
0.default= 0.0
0.type= double
0.desc=The minimum x velocity for the robot in m/s Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
1.name= ~max_vel_x
1.default= 0.55
1.type= double
1.desc=The maximum x velocity for the robot in m/s Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
2.name= ~min_vel_y
2.default= -0.1
2.type= double
2.desc=The minimum y velocity for the robot in m/s Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
3.name= ~max_vel_y
3.default= 0.1
3.type= double
3.desc=The maximum y velocity for the robot in m/s Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
4.name= ~max_vel_theta
4.default= 1.0
4.type= double
4.desc=The absolute value of the maximum rotational velocity for the robot in rad/s. The minimum rotational velocity is assumed to be -max_vel_theta Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
5.name= ~acc_lim_x
5.default= 2.5
5.type= double
5.desc=The acceleration limit of the robot in the x direction in m/s^2 Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
6.name= ~acc_lim_y
6.default= 2.5
6.type= double
6.desc=The acceleration limit of the robot in the y direction in m/s^2 Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
7.name= ~acc_lim_theta
7.default= 3.2
7.type= double
7.desc=The acceleration limit of the robot in the theta direction in rad/s^2 Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
8.name= ~decel_lim_x
8.default= -2.5
8.type= double
8.desc=The deceleration limit of the robot in the x direction in m/s^2 Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
9.name= ~decel_lim_y
9.default= -2.5
9.type= double
9.desc=The deceleration limit of the robot in the y direction in m/s^2 Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
10.name= ~decel_lim_theta
10.default= -3.2
10.type= double
10.desc=The deceleration limit of the robot in the theta direction in rad/s^2 Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
11.name= ~min_speed_xy
11.default= 0.1
11.type= double
11.desc=The absolute value of the minimum translational/xy velocity in m/s. If the value is negative, then the min speed will be arbitrarily close to 0.0. Previously called min_trans_vel Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
12.name= ~max_speed_xy
12.default= 0.55
12.type= double
12.desc=The absolute value of the maximum translational/xy velocity in m/s. If the value is negative, then the max speed is hypot(max_vel_x, max_vel_y). Previously called max_trans_vel Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
13.name= ~min_speed_theta
13.default= 0.4
13.type= double
13.desc=The absolute value of the minimum rotational velocity in rad/s. If the value is negative, then the min speed will be arbitrarily close to 0.0. Previously called min_rot_vel Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
}
}
# End of autogenerated section. You may edit below.
